//----------------------------------------------------------------------//  (c) 1999 David Whitney.    This software may be used or modified in any way, //  provided that this copyright notice appears on all copies of the software.//----------------------------------------------------------------------import java.awt.event.*;//----------------------------------------------------------------------//	UndoableEventListener.java/** *	An event listener that listens for events caused by UndoableActionHolders. *	Fires the events these objects hold. * *	@author		<a href="mailto:dwhitney@cs.stanford.edu">David Whitney</a> *	@version	May 15, 1999 *///----------------------------------------------------------------------public class UndoableEventListener	implements ActionListener, ItemListener{	public void actionPerformed( ActionEvent e )	{		if (e.getSource() instanceof UndoableActionHolder)			((UndoableActionHolder) e.getSource()).getAction().redo();		else			System.err.println("UndoableEventListener called without undoable action");	}		public void itemStateChanged( ItemEvent e )	{		if (e.getSource() instanceof UndoableActionHolder)			((UndoableActionHolder) e.getSource()).getAction().redo();		else			System.err.println("UndoableEventListener called without undoable action");	}}	// UndoableEventListener